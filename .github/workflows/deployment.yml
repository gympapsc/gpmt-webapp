name: Deployment to Azure App Service

on: [release]
env:
  NODE_VERSION: "15.x"
  AZURE_WEBAPP_NAME: "gympapmt"
  NEXT_PUBLIC_API_URL: "https://api.gympapmt.de"

jobs:
  test:
    name: Testing
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache node modules
        id: cache-node
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-modules-

      - name: npm install
        if: steps.cache-node.outputs.cache-hit != 'true'
        run: npm install
      
      - name: Run jest unittest
        run: npm run test:unit
  
  e2e:
    name: End-to-End Test
    runs-on: ubuntu-latest
    env:
      NEXT_PUBLIC_API_URL: "http://localhost:8089/"
      NEXT_PUBLIC_APP_VERION: "0.0.0"
    steps:
      - uses: actions/actions/checkout@v2
      
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}
    
      - name: Cache node modules
        id: cache-node
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-modules-
      
      - name: ACR login
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_USERNAME }}.azurecr.io
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      
      - name: Start api services in background
        run: docker-compose -f manifest/docker-compose.yml up -d

      - name: Run tests
        run: npm run test:e2e
      
      - name: Shutdown services
        run: docker-compose -f manifest/docker-compose.yml down
      
  deployment:
    runs-on: ubuntu-latest
    name: Deployment to Azure

    steps:
      - uses: actions/checkout@v2
      
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_USERNAME }}.azurecr.io
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      
      - run: |
          docker build ./ \
          -t ${{ secrets.REGISTRY_USERNAME }}.azurecr.io/gpmt-webapp:${{ github.event.release.tag_name }} \
          --build-arg APP_VERSION=${{ github.event.release.tag_name }}
        
      - run: |
          docker push ${{ secrets.REGISTRY_USERNAME }}.azurecr.io/gpmt-webapp:${{ github.event.release.tag_name }}

      - uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          images: ${{ secrets.REGISTRY_USERNAME }}.azurecr.io/gpmt-webapp:${{ github.event.release.tag_name }}
      
      - name: logout
        run: az logout
